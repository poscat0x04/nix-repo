name: auto update

on:
  push:
  schedule:
    - cron: "0 * * * *"

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
      - uses: cachix/install-nix-action@v13
        with:
          install_url: https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210823_af94b54/install
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v10
        with:
          name: nix-repo
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: true
      - name: Setup config
        run: |
          git config user.name actions
          git config user.email "actions@github.com"
      - name: Update flake input nixpkgs
        run: |
          echo "updating flake input nixpkgs"
          update=$(nix flake lock --update-input nixpkgs 2>&1 | grep -v warning || echo "Nothing")
          git add flake.lock
          git commit -m "flake.lock: Auto update

          Input changes:

          $update" || echo "No changes to commit"
          echo "updated:
          $update"
      - name: Run update script
        run: |
          nix develop -c bash update.sh
          git pull --rebase
          git push origin master
      - name: Push to cachix
        run: |
          nix flake archive --json \
            | jq -r '.path,(.inputs|to_entries[].value.path)' \
            | cachix push nix-repo

          drvs=(
            vscode-insiders
            prefs-cleaner
            extra-files.arkenfox-userjs
            extra-files.nord-alacritty
            extra-files.nord-dircolors
            extra-files.nord-konsole
            extra-files.v2ray-rules-dat.\"geoip.dat\"
            extra-files.v2ray-rules-dat.\"geosite.dat\"
            extra-files.nginx-fancyindex-flat-theme
            fcitx5-material-color
            china-ip-list-nft
            unbound-china-domain-list
            vlmcsd
            owlink
            opendrop
            cloudflare-ddns
            standardnotes
            unbound-full
            discord
            vscode-extensions.rust-lang.rust
            vscode-extensions.matklad.rust-analyzer
            vscode-extensions.vadimcn.vscode-lldb
            vscode-extensions.ms-python.python
            vscode-extensions.redhat.vscode-yaml
            vscode-extensions.vscodevim.vim
            vscode-extensions.bbenoist.Nix
            vscode-extensions.justusadam.language-haskell
            vscode-extensions.dhall.dhall-lang
            vscode-extensions.dhall.vscode-dhall-lsp-server
            vscode-extensions.haskell.haskell
            vscode-extensions.banacorn.agda-mode
            vscode-extensions.serayuzgur.crates
            vscode-extensions.JScearcy.rust-doc-viewer
            vscode-extensions.arcticicestudio.nord-visual-studio-code
            vscode-extensions.PKief.material-icon-theme
            vscode-extensions.dbaeumer.vscode-eslint
            vscode-extensions.timonwong.shellcheck
            vscode-extensions.wayou.vscode-todo-highlight
            vscode-extensions.maximedenes.vscoq
            vscode-extensions.james-yu.latex-workshop
            vscode-extensions.GitHub.vscode-pull-request-github
            vscode-extensions.mr-konn.generic-input-method
            vscode-extensions.christian-kohler.path-intellisense
            vscode-extensions.aaronduino.nix-lsp
            vscode-extensions.ms-vscode.hexeditor
            vscode-extensions.be5invis.toml
            vscode-extensions.jroesch.lean
            vscode-extensions.ms-vscode.cmake-tools
            vscode-extensions.twxs.cmake
            vscode-extensions.cschlosser.doxdocgen
            vscode-extensions.llvm-vs-code-extensions.vscode-clangd
          )

          for drv in ${drvs[@]}
          do
            echo "Building ${drv}"
            nix build -L --json ".#${drv}" \
              | jq -r '.[].outputs | to_entries[].value' \
              | cachix push nix-repo
          done
